[["01-Illumina_Quality_Control.html", "Illumina Quality Control Chapter 1 Introduction Table of contents", " Illumina Quality Control Matthew R. Gemmell 2024-10-17 Chapter 1 Introduction Illumina sequencing technology is the most common method used for DNA sequencing. However, it is not perfect and the generated data contains errors. This course aims to introduce you to Illumina quality control and checking, vital steps before carrying out most analyses with Illumina data. Sessions will start with a brief presentation followed by self-paced computer practicals guided by this online interactive book. This book will contain theory, practice code, and exercises. Multiple choice questions will guide the interpretation of results. At the end of this book learners will be able to: Explain how sequencing by synthesis works. Understand where common Illumina errors come from. Quality check Illumina fastq files with fastQC and multiQC. Quality control Illumina fastq files by trimming and filtering. Table of contents Cluster intro Setup Good Illumina data Poorer Illumina data QC exercise MultiQC Appendix This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. "],["02-Cluster_Introduction.html", "Chapter 2 Cluster Introduction 2.1 Logon instructions 2.2 The Terminal Window", " Chapter 2 Cluster Introduction 2.1 Logon instructions For this workshop we will be using Virtual Network Computing (VNC). Connect to the VNC with a browser by using the webVNC link you were sent. You will now be in a logged-in Linux VNC desktop with two terminals. You will see something as below (there may be only one terminal which is fine). If you do not see something similar please ask for assistance. If the VNC is taking up too much/little space of your browser you can use the zoom of your browser to adjust the size. Ensure you can see one whole terminal. These instructions will not work outside of this workshop. If you would like to install your own Linux OS on your desktop or laptop we would recommend Mint Linux. The following link is a guide to install Mint Linux: https://linuxmint-installation-guide.readthedocs.io/en/latest/ 2.2 The Terminal Window In our case the terminal window looks like the picture below. We are using the terminal window as our shell to interpret our commands to the kernel. Depending on your system and preferences it may look different. Already there is useful information for us on the terminal window. nsc206: This is the login name, also known as the username. Your screen will show your username for the Linux machine/cluster you are logged into. ada02: This is the machine name the user is logged into. ~: This represents the current directory of the user, or the directory a command was run in. In the Linux OS and others '~' is a shortcut to the user's home directory. Everything after the '$' is where commands are typed into the terminal. This is also referred to as the command line. To open a new terminal window, right click on the main screen, choose Terminal "],["03-Setup.html", "Chapter 3 Setup 3.1 Workshop data 3.2 Mamba", " Chapter 3 Setup This tutorial will give you hands on experience with quality control of genomic Illumina data. We will look at a good quality dataset followed by a poorer quality data set for practice. Afterwards you will carry out some self directed Quality checking as an exercise. However, prior to this we need to get our workshop data and setup our environment. 3.1 Workshop data Before we can carry on with the workshop you will need the workshop data. First ensure you are in your home directory. cd ~ Now copy the specified folder to you home directory. cp -r /pub14/tea/nsc206/NEOF/QC_workshop/ . Before running any examples let us change directory to the Illumina Quality control directory. cd QC_workshop/Illumina_QC/ 3.2 Mamba This book requires some packages. Mamba forge was used to install them. To learn more about Mamba-forge and how to create your own environment please see the appendix. To set-up your environment for this book please run the following code (you must include the full stop and space at the front of the command). . useilluminaqc You will have successfully activated the environment if you now see (illumina_qc) at the start of your command prompt. This indicates you are now in the mamba environment called illumina_qc created by the instructor. If you are interested in the use script you can look at its contents. less /usr/local/bin/useilluminaqc Tip: press q to quit less. For more about mamba and how to create your own illumina_qc environment please see the appendix. "],["04-Good_quality_data.html", "Chapter 4 Good quality genomic dataset 4.1 Run fastqc 4.2 Background and Foreground processes 4.3 View fastqc output", " Chapter 4 Good quality genomic dataset The first dataset will comprise of good quality reads for the genome of Psychrobacter arcticus. P. arcticus is a bacteria that was first isolated from Siberian permafrost. I am fond of Psychrobacter as my BSc project involved studying it. Prior to analysis we need to change directory to the example 1 directory. cd example_1 This directory contains the forward (R1) and reverse (R2) read fastq files. List the contents of the current directory to confirm this. ls 4.1 Run fastqc We will carry out fastqc quality checking of the reads. First make a directory for the output. mkdir raw_fastqc_output Now we can run fastqc. Note: The below command can be run over one line excluding the \\. Alternatively, you can type \\ during a command and then press the enter key. The next line on the command line will start with &gt;. This will allow you to continue typing the command on the line. This can be used to type one command over multiple lines. For more information on bash escape please see our Intro to unix materials fastqc -o raw_fastqc_output \\ p_arcticus_R1.fastq p_arcticus_R2.fastq 4.2 Background and Foreground processes The next step is to view the fastqc report. But first we will talk about background and foreground processes. Normally when you run a command it will run the process in the foreground. This means your command line will be locked whilst the process is running. You will only be able to type a new command in the terminal once the foreground process is finished. This is normally wanted but not always, for example when you run a process like firefox. To run a process in the background, so you can type and run new commands, you can add the symbol &amp; to the end of a command. 4.3 View fastqc output Using firefox have a look at the output html reports and answer the following questions. Open all the fastqc html files in the directory. firefox raw_fastqc_output/*_fastqc.html &amp; Note on * The * is a wildcard character that represents anything. *_fastqc.html represents all the files that end with _fastqc.html. For more information on wildcard characters please see ou Intro to unix materials How many total reads/sequences are there in the R1 file? 42 175,697 150 What is the length of the reads? 42 175,697 150 What is the average GC (%) content of the reads? 42 175,697 150 In R1 at what quality range is base position 1? 0-40 20-40 28-40 In R2 at what quality range are base positions 15-19? 0-40 20-40 28-40 In R1 at what quality range are base positions 45-49? 0-40 20-40 28-40 In R2 at what quality range is base position 150? 0-40 20-40 28-40 In this case the reads have been simulated from a genome assembly. This is the reason it looks so nice. Real data from a sequencing machine will unfortunately not look as good and will require quality trimming and filtering. Generally even if data does look very nice we would carry out quality control to get rid of any poor data that is masked by the very good data. However, for the purposes of time we will skip this at the moment. For your own interest the genome assembly can be found in the following link: https://www.ncbi.nlm.nih.gov/nuccore/CP000082.1 "],["05-Poorer_quality_data.html", "Chapter 5 Poorer quality genomic dataset 5.1 Quality checking 5.2 Quality control 5.3 Post Quality control check", " Chapter 5 Poorer quality genomic dataset Now let us look at actual read data. We will be looking at Bacillus cereus MiSeq data that can be found in the following link: https://ccb.jhu.edu/gage_b/datasets/index.html. For the purposes of the tutorial I subsampled the reads down to a more manageable 50,000 pairs, normally read data will not come in such round numbers. Before running any analysis we need to change directory to the example_2 directory. From the example_1 directory we can use the following command, where ../ represents going up one directory. cd ../example_2 #List contents of directory ls 5.1 Quality checking Let's make a directory for the fastqc output mkdir raw_fastqc_output Run fastqc on the all paired read files (*.fastq representing all the files that end with .fastq) fastqc -o raw_fastqc_output *.fastq We can open the fastqc output with the following command firefox raw_fastqc_output/*_fastqc.html &amp; Some typical features to note are: The quality decreases towards the end of the reads The R2 reads have poorer quality than the R1 reads The read sizes have a range compared to all being one size, however most of the reads are towards the long end of the range. 5.1.1 Quality checking MCQs Investigate the fastqc reports and answer the below question. How many total reads/sequences are there in the R2 file? 36 35-251 50,000 What is the length range of the data? 36 35-251 50,000 What is the average GC (%) content of the data? 36 35-251 50,000 At what base position/s does the IQR (Interquartile Range/yellow box) drop below a quality of Q28 for the R1 data? 15-19 235-239 250-251 At what base position/s does the IQR and whiskers (lines) first completely go above a quality of Q28 for the R2 data? 15-19 235-239 250-251 At what base position/s does the IQR (Interquartile Range/yellow box) drop below a quality of Q20 for the R2 data? 15-19 235-239 250-251 What is the most common \"mean sequence quality\" for the reads in R2 (see the peak of the \"Per sequence quality scores\" graph)? 37 129 250-251 What is the total count of overrepresented sequences in R1? 37 129 250-251 What is the most common base length range for R2 (see the peak of the \"Sequence Length Distribution\" graph)? 37 129 250-251 This data is pretty typical of what would normally be seen. We are therefore going to quality trim and filter the data. Unfortunately data straight from the sequencer always needs quality control. 5.2 Quality control Quality control generally comes in two forms: Trimming: This is directly cutting off bits of sequence. This is typical in the form of trimming off low quality bases from the end of reads and trimming off adapters at the start of reads. Filtering: This occurs when entire reads are removed. A typical occurrence of this is when a read is too small as we do not want reads below a certain length. To carry this out we are going to use trimmomatic. http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/TrimmomaticManual_V0.32.pdf To run trimmomatic with the reads we will use the below command. trimmomatic PE \\ -phred33 \\ B_cereus_R1.fastq B_cereus_R2.fastq \\ -baseout B_cereus.fastq \\ SLIDINGWINDOW:4:20 MINLEN:50 Parameters: PE: Input data consists of paired-end reads. -phred33: indicates input data has Phred33 encoding. Phred33 includes Sanger, Illumina 1.8+, and PacBio quality encoding. B_cereus_R1.fastq B_cereus_R2.fastq: The input forward and reverse read files. -baseout: This parameter is used to create the names of the four output files (more info below). SLIDINGWINDOW: This will cause sliding window trimming to be carried out. The :4:20 specifies the window size (4) and the average quality required to retain the window (20). MINLEN: This specifies the minimum length for a read to be retained. We have set this to 50 (:50). Note: When using trimmomatic on future data ensure you change the input files and the -baseout parameter to match your data. Once the command is run it will give you some useful output to the screen. Based on it, what percentage of paired reads were kept? 4.73% 14.99% 76.62% Output The command produces four files with names based off the -baseout parameter. You can use ls to see the output files. The files are: B_cereus_1P.fastq &amp; B_cereus_2P.fastq: The paired forward and reverse reads after successful trimming. In the vast majority of cases these are the two files which will be used for further analysis. B_cereus_1U.fastq: The trimmed unpaired forward reads. These are produced when the forward read is retained after trimming but not the matching reverse read. This can be ignored in most cases. B_cereus_2U.fastq: The trimmed unpaired reverse reads. These are produced when the reverse read is retained after trimming but not the matching forward read. This can be ignored in most cases. 5.3 Post Quality control check To see how successful the quality control has been we need to run fastqc on the trimmomatic output. First create a new directory for the fastqc output mkdir trimmomatic_fastqc_output Now run fastqc on the two paired read files fastqc -o trimmomatic_fastqc_output \\ B_cereus_1P.fastq B_cereus_2P.fastq We can open the fastqc output with the following commands firefox trimmomatic_fastqc_output/*_fastqc.html &amp; 5.3.1 Quality checking MCQs To see how well the reads have improved answer the below questions and compare to them to the answers of the raw read fastqc questions. How many total reads/sequences are there in the R2 (2P) file? 35 50-251 38,309 What is the length range of the data? 35 50-251 38,309 What is the average GC (%) content of the data? 35 50-251 38,309 In R1 (1P), do the IQRs and/or whiskers drop below Q28 in the \"Per base sequence quality\" graph? Yes No In R2 (2P), do the IQRs and/or whiskers drop below Q28 in the \"Per base sequence quality\" graph? Yes No In R2 (2P), do the IQRs drop below Q28 in the \"Per base sequence quality\" graph? Yes No What is the most common \"mean sequence quality\" for the reads in R2 (2P) (see the peak of the \"Per sequence quality scores\" graph)? 0 37 250-251 What is the total count of overrepresented sequences in R1 (1P)? 0 37 250-251 What is the most common base length range for R2 (see the peak of the \"Sequence Length Distribution\" graph)? 0 37 250-251 Some things to note: The amount of reads has significantly decreased due to quality control. This is expected, however this will need to be taken into account. If you do not have enough reads for the downstream analysis you will need to be less stringent on the trimming or filtering. What is the minimum number of reads required for downstream analysis? Unfortunately this depends on the specific analysis at hand. For genome assemblies generally the rule of thumb is you want at least 20 times as much bases in the reads as would be in the final assembly (based on the genome size of the organism). R2 quality is still worse than R1 quality. Again this is normal. The quality controlled reads of the reverse reads still drop below Q28 towards the end of the reads. This is pretty typical. You could be more stringent but as previously mentioned you may be removing too many reads. The overrepresented sequences, which were Illumina adapters needed for sequencing, were removed by trimmomatic. This is good as we don't need/want them any more. Note: If you are getting data from a sequencing centre they will have most likely removed the adapters already. Be sure to check they are not appearing in the Overrepresented sequences or the Adapter Content section of the fastqc report after trimming before continuing. If adapters are present you can use Cutadapt to remove them: https://cutadapt.readthedocs.io/en/stable/guide.html "],["06-QC_exercises.html", "Chapter 6 QC exercises 6.1 Whole shotgun metagenomics 6.2 16S rRNA Metagenetics", " Chapter 6 QC exercises Now you will carry out Quality checking and control of a whole genome shotgun study and a 16S rRNA study. You will run through the Quality checking and Quality control using the examples to help you. There will be questions to answer after which there will be info on the data and what the QC has shown. 6.1 Whole shotgun metagenomics The data from this exercise comes from the following link: https://www.ebi.ac.uk/ena/browser/view/SRR2081071 This contains the genomic content of many organisms. The read data is within your ~/QC_workshop/Illumina_QC/exercise_1 directory (ensure to change directory to this). The reads have been subsampled so you will be working on 100,000 paired reads. Carry out fastqc on the raw reads and ponder the below questions. What may be causing the weird GC content at the start of the reads? The \"Per sequence GC content\" has a weird peak. Why might this be? Carry out trimmomatic quality control, deciding on the sliding window and the length threshold. After trimmomatic carry out fastqc on the trimmed and filtered reads to determine if it was successful. Afterwards answer the following questions. If your answers don't match the correct answers below try to rerun trimmomatic with different parameter options. Is the number of quality controlled reads above 60,000? Yes No Does the quality for either R1 or R2 drop below Q24 (Including the whiskers)? Yes No Is the weird GC content still at the start of the read? Yes No Does the \"Per sequence GC content\" still have a weird peak? Yes No Explanations In this case it helps to know the adapter sequence, used for the Illumina sequencing, was Nextera. Nextera is decent but I and others online have experienced it has a slight bias. It prefers to ligate to certain sequence patterns, this bias is then shown as the GC content bias at the start of reads. Fortunately the rest of the GC content is fine. In previous tests I have trimmed off the first 20bps to remove this bias and not removed the first 20bp. I found there was little difference in the downstream results for the two methods. As for the weird \"Per sequence GC content\" peak, We must remember that the metagenome sample contains many different organisms with different GC contents. Therefore a flat GC peak would be expected. 6.2 16S rRNA Metagenetics Before starting this exercise I must note this is not the normal method to quality control 16S rRNA data. Both QIIME2 and MOTHUR have their own methods but it can be useful to check the quality of 16S rRNA data. With that in mind we will only use fastqc to check the quality and features of a 16S rRNA dataset. The dataset can be found in the following link: https://www.ebi.ac.uk/ena/data/view/SRR2081030 The dataset in the cluster is the full dataset. It can be found in your ~/QC_workshop/Illumina_QC/exercise_2 directory. Run fastqc on the data and view the reports. Looking at the report you may be worried by its appearance, however this is normal for 16S rRNA data. Some explanations for the features are: The base quality of R2 is very low towards the end. For most 16S rRNA studies the paired reads overlap and so poor quality bases at the end of R1 are corrected by the overlapping R2 reads and vice versa. The \"Per base sequence content\" is heavily biased. This again is normal as we are targeting a specific region within the genome, a 16S rRNA region. This means a lot of the sequences will share very similar content. The fact we are targeting a specific region also makes the \"Per sequence GC content\", \"Sequence duplication levels\", and \"overrepresented sequences\" look worrying and warnings are given. These warnings are designed to help with whole genome data and so they are not useful in this circumstance. These features show that it is important to understand what your data contains and what analyses you will be carrying out with the data. "],["07-MultiQC.html", "Chapter 7 MultiQC 7.1 The data 7.2 Fastqc of the raw data 7.3 Fastqc of the trimmed data 7.4 Read data", " Chapter 7 MultiQC MultiQC is a brilliant tool that can be used to collate multiple fastqc reports into one interactive html file. This means if you have 100 sets of paired reads you can look at 2 htmls rather than 200 FastQC reports. I say 2 htmls because it is best to put the forward reads into one MultiQC report and the reverse reads into another. Main page: https://multiqc.info/ Documentation: https://multiqc.info/docs/ We will carry out a quick example of using MultiQC with fastqcdata. 7.1 The data Move into the multiqc_example directory: cd ~/QC_workshop/Illumina_QC/multiqc_example Note: Ensure you are in the illumina_qc conda environment. If (illumina_qc) is at the start of your command prompt in your current terminal you are in the environment. If you are not in the environment please see the Mamba section to activate it. We will be quality checking 4 Aeromonas hydrophila samples. List the contents of the directory and you will see the fastq files containing our data. #List all the contents ls #List the raw fastq files ls *_R*.fastq #List the paired fastq files trimmed with trimmomatic ls *P.fastq As you can see from listing the contents you have been provided the raw and trimmed data. This is to save you time so all you need to carry out is the fastqc and multiqc commands. 7.2 Fastqc of the raw data The first step is to carry out fastqc on the raw data. #Make output directory mkdir raw_fastqc_output #Run fastqc fastqc -o raw_fastqc_output *_R*.fastq Now that we have our fastqc output we can carry out multiqc. Due to the inherent differences between the forward and reverse reads it is best to make separate multiqc reports for them. #Create output directories mkdir raw_multiqc_output mkdir raw_multiqc_output/r1 mkdir raw_multiqc_output/r2 #Run multiqc multiqc -o raw_multiqc_output/r1 raw_fastqc_output/*R1* multiqc -o raw_multiqc_output/r2 raw_fastqc_output/*R2* Now we can open the multiqc reports with firefox. firefox raw_multiqc_output/*/*.html Investigate the report. Notice how you can hover over parts of the plots to get information. If you would like more information there is a handy link to a tutorial video at the top of the report. 7.3 Fastqc of the trimmed data Now that you have looked at the multiqc report for the raw data it is time to carry out fastqc and multiqc on the trimmed data. #Make fastqc output directory mkdir trimmomatic_fastqc_output #Run fastqc fastqc -o trimmomatic_fastqc_output *P.fastq #Create output directories mkdir trimmomatic_multiqc_output mkdir trimmomatic_multiqc_output/r1 mkdir trimmomatic_multiqc_output/r2 #Run multiqc multiqc -o trimmomatic_multiqc_output/r1 trimmomatic_fastqc_output/*1P* multiqc -o trimmomatic_multiqc_output/r2 trimmomatic_fastqc_output/*2P* #Look at the reports in firefox firefox trimmomatic_multiqc_output/*/*.html This is a brilliant use of MultiQC. However, it can also be used to collate the output from many other bioinformatic tools (https://multiqc.info/#supported-tools). 7.4 Read data The read data was simulated from the Aeromonas hydrophila genome assembly in the GAGE-B dataset https://ccb.jhu.edu/gage_b/datasets/index.html. "],["08-Useful_Tools_and_Considerations.html", "A Useful tools and considerations A.1 Quality trimming and filtering tools A.2 Fasta and fastq processing toolkits B Mamba B.1 Mamba installation and environment B.2 Illumina QC environment", " A Useful tools and considerations There are various other useful tools for sequencing QC of Illumina data. Below are some suggestions but there are many more. A.1 Quality trimming and filtering tools A.1.1 Trim Galore From the people who brought you FastQC, Trim Galore. This is a wrapper around cutadapt and FastQC. It has a lot of options and can output fastqc results of the quality controlled reads at the same time. Github page: https://github.com/FelixKrueger/TrimGalore Manual: https://github.com/FelixKrueger/TrimGalore/blob/master/Docs/Trim_Galore_User_Guide.md A.2 Fasta and fastq processing toolkits Sometimes a fasta/fastq file will need to be modified to be properly used with a file or to remove a specific feature. Thankfully if you need to carry out a specific action someone else has probably needed to before you. Below are some tools that can be used to modify fasta/fastq files. A.2.1 Fastp This is a tool designed to be a \"all-in-one\" preprocessor for fastq files. This includes quality control. I find it very useful as the tool will only do what you tell it to do. This means you can tell it to only carry out length filtering and it will only do length filtering (unlike Trim Galore which will insist on quality trimming). You could therefore use the below command to trim all reads to a length of 120 and remove any read pairs where at least one read has a length shorter than 120. You'll then only have reads that are a length of 120. This is required for a few tools. fastp --in1 R1.fastq --in2 R2.fastq \\ --out1 R1.120.fastq --out2 R2.120.fastq \\ --max_len1 120 --max_len2 120 --length_required 120 Main page: https://github.com/OpenGene/fastp A.2.2 Seqtk A tool to process fasta or fastq files. It can carry out many tasks but I primarily use it to: convert fastq files to fasta seqtk seq -a in.fastq &gt; out.fasta subsample paired reads from fastq files seqtk sample -s100 read1.fastq 10000 &gt; subsample1.fastq seqtk sample -s100 read2.fastq 10000 &gt; subsample2.fastq For more information on how these commands work and for further commands please see the link below. Github: https://github.com/lh3/seqtk A.2.3 FASTX-Toolkit A tool to process fasta or fastq files. It is quite useful but unfortunately does not take paired read information into context. This means if a read is removed from the reverse read it will not necessarily be removed from the forward file. My favourite tool from this is 'fasta_formatter'. It can be used to set the maximum number of bases that will be on one line in a fasta file. I primarily use this so that each seq in a fasta file is on one line. fasta_formatter -i in.fasta -o out.fasta -w 0 Github: https://github.com/agordon/fastx_toolkit A.2.4 BBTools BBTools is a collection of various tools. There are tools for deduplication, mapping, merging, and more. There is a lot so if you are interested it would be best to look at the links below. Main page: https://jgi.doe.gov/data-and-tools/software-tools/bbtools/bb-tools-user-guide/ Data Preprocessing: https://jgi.doe.gov/data-and-tools/software-tools/bbtools/bb-tools-user-guide/data-preprocessing/ B Mamba B.1 Mamba installation and environment Mamba is a reimplementation of conda. It is a great tool for installing bioinformatic packages including R packages. Mamba github: https://github.com/mamba-org/mamba The best way to use Mamba is to install Miniforge. It has both Conda and Mamba commands. Miniforge installation: https://github.com/conda-forge/miniforge Mamba guide: https://mamba.readthedocs.io/en/latest/user_guide/mamba.html B.2 Illumina QC environment To create the mamba environment illumina_qc run the below commands in your bash. You will need to have installed mamba first. #Illumina QC mamba create -n illumina_qc mamba activate illumina_qc mamba install -c bioconda fastqc mamba install -c bioconda trimmomatic mamba install -c bioconda multiqc "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
